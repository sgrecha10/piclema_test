version: '2.4'

services:
  django:
    container_name: ${COMPOSE_PROJECT_NAME}_django
    image: ${COMPOSE_PROJECT_NAME}_python
    build:
      context: .
      dockerfile: Dockerfile
    logging:
      driver: "json-file"
    networks:
      - piklematestnetwork
    volumes:
      - ./src:/app
    env_file:
      - ./.env
    ports:
      - "7000:7000"
    expose:
      - "7000"
    command: python3 manage.py runserver 0.0.0.0:7000
    depends_on:
      - postgres_db
      - kafka

  postgres_db:
    container_name: ${COMPOSE_PROJECT_NAME}_postgres
    hostname: postgres
    image: postgres:14.1-alpine
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    ports:
      - "5434:5432"
    networks:
      - piklematestnetwork
    volumes:
      - piklemtestadb:/var/lib/postgres_14/data
    environment:
      - POSTGRES_DB=piklema
      - POSTGRES_USER=piklema
      - POSTGRES_PASSWORD=piklema
      - POSTGRES_PORT=5432

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: ${COMPOSE_PROJECT_NAME}_zookeeper
    networks:
      - piklematestnetwork
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:2.5.0
    container_name: ${COMPOSE_PROJECT_NAME}_kafka
    networks:
      - piklematestnetwork
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://10.5.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

networks:
  piklematestnetwork:
    name: "piklematestnetwork"
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.5.0.0/16
          ip_range: 10.5.0.0/24
          gateway: 10.5.0.1
          aux_addresses:
            kafka: 10.5.0.2
            zookeeper: 10.5.0.3

volumes:
  piklemtestadb:
